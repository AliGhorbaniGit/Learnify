# Generated by Django 5.0.7 on 2025-04-30 09:09

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog/article')),
                ('intro_txt', models.TextField()),
                ('description', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('edit_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('w', 'Waiting'), ('a', 'Approved'), ('na', 'Not Approved')], default='w', max_length=2)),
                ('seoT', models.CharField(blank=True, max_length=60, verbose_name=' SEO title ')),
                ('seoD', models.CharField(blank=True, max_length=160, verbose_name=' SEO description')),
                ('seoK', models.TextField(blank=True, verbose_name=' SEO keywords')),
                ('category', models.ManyToManyField(blank=True, related_name='articles', to='common.category')),
                ('related_articles', models.ManyToManyField(blank=True, related_name='related_to', to='blog.article', verbose_name='Related Articles')),
                ('tag', models.ManyToManyField(blank=True, related_name='articles', to='common.tag')),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=1000)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('w', 'Waiting'), ('a', 'Approved'), ('na', 'Not Approved')], default='w', max_length=2)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article Comment',
                'verbose_name_plural': 'Article Comments',
                'ordering': ['-submit_date'],
            },
        ),
        migrations.CreateModel(
            name='Writer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('linkedin_address', models.CharField(blank=True, max_length=255)),
                ('youtube_address', models.CharField(blank=True, max_length=255)),
                ('facebook_address', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='writer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Writer',
                'verbose_name_plural': 'Writers',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='writer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='articles', to='blog.writer'),
        ),
        migrations.CreateModel(
            name='ArticleRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_date', models.DateTimeField(auto_now_add=True, verbose_name='Submit Date')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Score')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='User IP Address')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='blog.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles_rate', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article Rate',
                'verbose_name_plural': 'Article Rates',
                'unique_together': {('article', 'user')},
            },
        ),
    ]
